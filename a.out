#! /usr/local/bin/vvp
:ivl_version "12.0 (stable)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision + 0;
:vpi_module "/usr/local/lib/ivl/system.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_sys.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_textio.vpi";
:vpi_module "/usr/local/lib/ivl/v2005_math.vpi";
:vpi_module "/usr/local/lib/ivl/va_math.vpi";
:vpi_module "/usr/local/lib/ivl/v2009.vpi";
S_0xd556e00 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_0xd559630 .scope module, "tb_parallel_adder_4bit" "tb_parallel_adder_4bit" 3 1;
 .timescale 0 0;
v0xd58a2c0_0 .var "A", 3 0;
v0xd58a3a0_0 .var "B", 3 0;
v0xd58a440_0 .var "Cin", 0 0;
v0xd58a530_0 .net "Cout", 0 0, L_0xd58c7d0;  1 drivers
v0xd58a620_0 .net "Sum", 3 0, L_0xd58cb40;  1 drivers
v0xd58a710_0 .var "expected_sum", 4 0;
v0xd58a7b0_0 .var/i "i", 31 0;
v0xd58a890_0 .var/i "j", 31 0;
v0xd58a970_0 .var/i "k", 31 0;
S_0xd559e40 .scope module, "dut" "parallel_adder_4bit" 3 11, 4 9 0, S_0xd559630;
 .timescale 0 0;
    .port_info 0 /INPUT 4 "A";
    .port_info 1 /INPUT 4 "B";
    .port_info 2 /INPUT 1 "Cin";
    .port_info 3 /OUTPUT 4 "Sum";
    .port_info 4 /OUTPUT 1 "Cout";
v0xd589b50_0 .net "A", 3 0, v0xd58a2c0_0;  1 drivers
v0xd589c50_0 .net "B", 3 0, v0xd58a3a0_0;  1 drivers
v0xd589d30_0 .net "Cin", 0 0, v0xd58a440_0;  1 drivers
v0xd589e00_0 .net "Cout", 0 0, L_0xd58c7d0;  alias, 1 drivers
v0xd589ed0_0 .net "Sum", 3 0, L_0xd58cb40;  alias, 1 drivers
v0xd589f70_0 .net "c1", 0 0, L_0xd58afc0;  1 drivers
v0xd58a060_0 .net "c2", 0 0, L_0xd58b7e0;  1 drivers
v0xd58a150_0 .net "c3", 0 0, L_0xd58bf90;  1 drivers
L_0xd58b0d0 .part v0xd58a2c0_0, 0, 1;
L_0xd58b200 .part v0xd58a3a0_0, 0, 1;
L_0xd58b8f0 .part v0xd58a2c0_0, 1, 1;
L_0xd58ba20 .part v0xd58a3a0_0, 1, 1;
L_0xd58c0a0 .part v0xd58a2c0_0, 2, 1;
L_0xd58c260 .part v0xd58a3a0_0, 2, 1;
L_0xd58c8e0 .part v0xd58a2c0_0, 3, 1;
L_0xd58ca10 .part v0xd58a3a0_0, 3, 1;
L_0xd58cb40 .concat8 [ 1 1 1 1], L_0xd58ab70, L_0xd58b3a0, L_0xd58bbc0, L_0xd58c4d0;
S_0xd55b4b0 .scope module, "fa0" "full_adder" 4 18, 4 1 0, S_0xd559e40;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "A";
    .port_info 1 /INPUT 1 "B";
    .port_info 2 /INPUT 1 "Cin";
    .port_info 3 /OUTPUT 1 "Sum";
    .port_info 4 /OUTPUT 1 "Cout";
L_0xd58aae0 .functor XOR 1, L_0xd58b0d0, L_0xd58b200, C4<0>, C4<0>;
L_0xd58ab70 .functor XOR 1, L_0xd58aae0, v0xd58a440_0, C4<0>, C4<0>;
L_0xd58ac10 .functor AND 1, L_0xd58b0d0, L_0xd58b200, C4<1>, C4<1>;
L_0xd58ad20 .functor AND 1, L_0xd58b200, v0xd58a440_0, C4<1>, C4<1>;
L_0xd58ae20 .functor OR 1, L_0xd58ac10, L_0xd58ad20, C4<0>, C4<0>;
L_0xd58af10 .functor AND 1, L_0xd58b0d0, v0xd58a440_0, C4<1>, C4<1>;
L_0xd58afc0 .functor OR 1, L_0xd58ae20, L_0xd58af10, C4<0>, C4<0>;
v0xd561110_0 .net "A", 0 0, L_0xd58b0d0;  1 drivers
v0xd586ee0_0 .net "B", 0 0, L_0xd58b200;  1 drivers
v0xd586fa0_0 .net "Cin", 0 0, v0xd58a440_0;  alias, 1 drivers
v0xd587070_0 .net "Cout", 0 0, L_0xd58afc0;  alias, 1 drivers
v0xd587130_0 .net "Sum", 0 0, L_0xd58ab70;  1 drivers
v0xd587240_0 .net *"_ivl_0", 0 0, L_0xd58aae0;  1 drivers
v0xd587320_0 .net *"_ivl_10", 0 0, L_0xd58af10;  1 drivers
v0xd587400_0 .net *"_ivl_4", 0 0, L_0xd58ac10;  1 drivers
v0xd5874e0_0 .net *"_ivl_6", 0 0, L_0xd58ad20;  1 drivers
v0xd587650_0 .net *"_ivl_8", 0 0, L_0xd58ae20;  1 drivers
S_0xd5877d0 .scope module, "fa1" "full_adder" 4 19, 4 1 0, S_0xd559e40;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "A";
    .port_info 1 /INPUT 1 "B";
    .port_info 2 /INPUT 1 "Cin";
    .port_info 3 /OUTPUT 1 "Sum";
    .port_info 4 /OUTPUT 1 "Cout";
L_0xd58b330 .functor XOR 1, L_0xd58b8f0, L_0xd58ba20, C4<0>, C4<0>;
L_0xd58b3a0 .functor XOR 1, L_0xd58b330, L_0xd58afc0, C4<0>, C4<0>;
L_0xd58b4f0 .functor AND 1, L_0xd58b8f0, L_0xd58ba20, C4<1>, C4<1>;
L_0xd58b5b0 .functor AND 1, L_0xd58ba20, L_0xd58afc0, C4<1>, C4<1>;
L_0xd58b620 .functor OR 1, L_0xd58b4f0, L_0xd58b5b0, C4<0>, C4<0>;
L_0xd58b730 .functor AND 1, L_0xd58b8f0, L_0xd58afc0, C4<1>, C4<1>;
L_0xd58b7e0 .functor OR 1, L_0xd58b620, L_0xd58b730, C4<0>, C4<0>;
v0xd587a00_0 .net "A", 0 0, L_0xd58b8f0;  1 drivers
v0xd587ac0_0 .net "B", 0 0, L_0xd58ba20;  1 drivers
v0xd587b80_0 .net "Cin", 0 0, L_0xd58afc0;  alias, 1 drivers
v0xd587c80_0 .net "Cout", 0 0, L_0xd58b7e0;  alias, 1 drivers
v0xd587d20_0 .net "Sum", 0 0, L_0xd58b3a0;  1 drivers
v0xd587e10_0 .net *"_ivl_0", 0 0, L_0xd58b330;  1 drivers
v0xd587ef0_0 .net *"_ivl_10", 0 0, L_0xd58b730;  1 drivers
v0xd587fd0_0 .net *"_ivl_4", 0 0, L_0xd58b4f0;  1 drivers
v0xd5880b0_0 .net *"_ivl_6", 0 0, L_0xd58b5b0;  1 drivers
v0xd588220_0 .net *"_ivl_8", 0 0, L_0xd58b620;  1 drivers
S_0xd5883a0 .scope module, "fa2" "full_adder" 4 20, 4 1 0, S_0xd559e40;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "A";
    .port_info 1 /INPUT 1 "B";
    .port_info 2 /INPUT 1 "Cin";
    .port_info 3 /OUTPUT 1 "Sum";
    .port_info 4 /OUTPUT 1 "Cout";
L_0xd58bb50 .functor XOR 1, L_0xd58c0a0, L_0xd58c260, C4<0>, C4<0>;
L_0xd58bbc0 .functor XOR 1, L_0xd58bb50, L_0xd58b7e0, C4<0>, C4<0>;
L_0xd58bcc0 .functor AND 1, L_0xd58c0a0, L_0xd58c260, C4<1>, C4<1>;
L_0xd58bd30 .functor AND 1, L_0xd58c260, L_0xd58b7e0, C4<1>, C4<1>;
L_0xd58bda0 .functor OR 1, L_0xd58bcc0, L_0xd58bd30, C4<0>, C4<0>;
L_0xd58bee0 .functor AND 1, L_0xd58c0a0, L_0xd58b7e0, C4<1>, C4<1>;
L_0xd58bf90 .functor OR 1, L_0xd58bda0, L_0xd58bee0, C4<0>, C4<0>;
v0xd5885e0_0 .net "A", 0 0, L_0xd58c0a0;  1 drivers
v0xd5886a0_0 .net "B", 0 0, L_0xd58c260;  1 drivers
v0xd588760_0 .net "Cin", 0 0, L_0xd58b7e0;  alias, 1 drivers
v0xd588860_0 .net "Cout", 0 0, L_0xd58bf90;  alias, 1 drivers
v0xd588900_0 .net "Sum", 0 0, L_0xd58bbc0;  1 drivers
v0xd5889f0_0 .net *"_ivl_0", 0 0, L_0xd58bb50;  1 drivers
v0xd588ad0_0 .net *"_ivl_10", 0 0, L_0xd58bee0;  1 drivers
v0xd588bb0_0 .net *"_ivl_4", 0 0, L_0xd58bcc0;  1 drivers
v0xd588c90_0 .net *"_ivl_6", 0 0, L_0xd58bd30;  1 drivers
v0xd588e00_0 .net *"_ivl_8", 0 0, L_0xd58bda0;  1 drivers
S_0xd588f80 .scope module, "fa3" "full_adder" 4 21, 4 1 0, S_0xd559e40;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "A";
    .port_info 1 /INPUT 1 "B";
    .port_info 2 /INPUT 1 "Cin";
    .port_info 3 /OUTPUT 1 "Sum";
    .port_info 4 /OUTPUT 1 "Cout";
L_0xd58c460 .functor XOR 1, L_0xd58c8e0, L_0xd58ca10, C4<0>, C4<0>;
L_0xd58c4d0 .functor XOR 1, L_0xd58c460, L_0xd58bf90, C4<0>, C4<0>;
L_0xd58c5d0 .functor AND 1, L_0xd58c8e0, L_0xd58ca10, C4<1>, C4<1>;
L_0xd58c640 .functor AND 1, L_0xd58ca10, L_0xd58bf90, C4<1>, C4<1>;
L_0xd58c6b0 .functor OR 1, L_0xd58c5d0, L_0xd58c640, C4<0>, C4<0>;
L_0xd58c720 .functor AND 1, L_0xd58c8e0, L_0xd58bf90, C4<1>, C4<1>;
L_0xd58c7d0 .functor OR 1, L_0xd58c6b0, L_0xd58c720, C4<0>, C4<0>;
v0xd589190_0 .net "A", 0 0, L_0xd58c8e0;  1 drivers
v0xd589270_0 .net "B", 0 0, L_0xd58ca10;  1 drivers
v0xd589330_0 .net "Cin", 0 0, L_0xd58bf90;  alias, 1 drivers
v0xd589430_0 .net "Cout", 0 0, L_0xd58c7d0;  alias, 1 drivers
v0xd5894d0_0 .net "Sum", 0 0, L_0xd58c4d0;  1 drivers
v0xd5895c0_0 .net *"_ivl_0", 0 0, L_0xd58c460;  1 drivers
v0xd5896a0_0 .net *"_ivl_10", 0 0, L_0xd58c720;  1 drivers
v0xd589780_0 .net *"_ivl_4", 0 0, L_0xd58c5d0;  1 drivers
v0xd589860_0 .net *"_ivl_6", 0 0, L_0xd58c640;  1 drivers
v0xd5899d0_0 .net *"_ivl_8", 0 0, L_0xd58c6b0;  1 drivers
    .scope S_0xd559630;
T_0 ;
    %vpi_call/w 3 20 "$dumpfile", "tb_parallel_adder_4bit.vcd" {0 0 0};
    %vpi_call/w 3 21 "$dumpvars", 32'sb00000000000000000000000000000000, S_0xd559630 {0 0 0};
    %vpi_call/w 3 22 "$display", "Starting 4-bit Parallel Adder Testbench..." {0 0 0};
    %vpi_call/w 3 23 "$display", "A   B   Cin | Sum Cout | Expected | Pass/Fail" {0 0 0};
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0xd58a7b0_0, 0, 32;
T_0.0 ;
    %load/vec4 v0xd58a7b0_0;
    %cmpi/s 16, 0, 32;
    %jmp/0xz T_0.1, 5;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0xd58a890_0, 0, 32;
T_0.2 ;
    %load/vec4 v0xd58a890_0;
    %cmpi/s 16, 0, 32;
    %jmp/0xz T_0.3, 5;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0xd58a970_0, 0, 32;
T_0.4 ;
    %load/vec4 v0xd58a970_0;
    %cmpi/s 2, 0, 32;
    %jmp/0xz T_0.5, 5;
    %load/vec4 v0xd58a7b0_0;
    %parti/s 4, 0, 2;
    %store/vec4 v0xd58a2c0_0, 0, 4;
    %load/vec4 v0xd58a890_0;
    %parti/s 4, 0, 2;
    %store/vec4 v0xd58a3a0_0, 0, 4;
    %load/vec4 v0xd58a970_0;
    %parti/s 1, 0, 2;
    %store/vec4 v0xd58a440_0, 0, 1;
    %delay 1, 0;
    %load/vec4 v0xd58a2c0_0;
    %pad/u 5;
    %load/vec4 v0xd58a3a0_0;
    %pad/u 5;
    %add;
    %load/vec4 v0xd58a440_0;
    %pad/u 5;
    %add;
    %store/vec4 v0xd58a710_0, 0, 5;
    %load/vec4 v0xd58a530_0;
    %load/vec4 v0xd58a620_0;
    %concat/vec4; draw_concat_vec4
    %load/vec4 v0xd58a710_0;
    %cmp/e;
    %jmp/0xz  T_0.6, 4;
    %vpi_call/w 3 35 "$display", "%b %b   %b   | %b   %b   | %b       | PASS", v0xd58a2c0_0, v0xd58a3a0_0, v0xd58a440_0, v0xd58a620_0, v0xd58a530_0, v0xd58a710_0 {0 0 0};
    %jmp T_0.7;
T_0.6 ;
    %vpi_call/w 3 38 "$display", "%b %b   %b   | %b   %b   | %b       | FAIL <<<", v0xd58a2c0_0, v0xd58a3a0_0, v0xd58a440_0, v0xd58a620_0, v0xd58a530_0, v0xd58a710_0 {0 0 0};
T_0.7 ;
    %load/vec4 v0xd58a970_0;
    %addi 1, 0, 32;
    %store/vec4 v0xd58a970_0, 0, 32;
    %jmp T_0.4;
T_0.5 ;
    %load/vec4 v0xd58a890_0;
    %addi 1, 0, 32;
    %store/vec4 v0xd58a890_0, 0, 32;
    %jmp T_0.2;
T_0.3 ;
    %load/vec4 v0xd58a7b0_0;
    %addi 1, 0, 32;
    %store/vec4 v0xd58a7b0_0, 0, 32;
    %jmp T_0.0;
T_0.1 ;
    %vpi_call/w 3 45 "$finish" {0 0 0};
    %end;
    .thread T_0;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "-";
    "testbench.sv";
    "design.sv";
